{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shehzad\\\\Downloads\\\\Metronic-System-main\\\\Metronic-System-main\\\\src\\\\Context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")) || null);\n  const register = async (email, password, name) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signup\", {\n        email,\n        password,\n        name\n      });\n      if (response.data.token && response.data.user) {\n        setToken(response.data.token);\n        setUser(response.data.user);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      throw error; // Re-throw to be caught in the component\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signin\", {\n        email,\n        password\n      });\n      if (response.data.token && response.data.user) {\n        setToken(response.data.token);\n        setUser(response.data.user);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error; // Re-throw to be caught in the component\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      register,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mHE/fm5HJygZ75Xyt/MhLlu6GX8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","JSON","parse","register","email","password","name","response","post","data","setItem","stringify","Error","error","console","login","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shehzad/Downloads/Metronic-System-main/Metronic-System-main/src/Context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [user, setUser] = useState(\n    JSON.parse(localStorage.getItem(\"user\")) || null\n  );\n\n  const register = async (email, password, name) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signup\", {\n        email,\n        password,\n        name,\n      });\n\n      if (response.data.token && response.data.user) {\n        setToken(response.data.token);\n        setUser(response.data.user);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      throw error; // Re-throw to be caught in the component\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signin\", {\n        email,\n        password,\n      });\n\n      if (response.data.token && response.data.user) {\n        setToken(response.data.token);\n        setUser(response.data.user);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error; // Re-throw to be caught in the component\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, register, login }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}