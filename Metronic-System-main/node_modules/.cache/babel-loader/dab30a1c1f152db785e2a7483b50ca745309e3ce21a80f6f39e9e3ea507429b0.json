{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shehzad\\\\Downloads\\\\Metronic-System-main\\\\Metronic-System-main\\\\src\\\\Context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const storedToken = localStorage.getItem(\"token\");\n        const storedUser = localStorage.getItem(\"user\");\n        if (storedToken) {\n          setToken(storedToken);\n          setIsAuthenticated(true);\n        }\n        if (storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          if (parsedUser && typeof parsedUser === \"object\") {\n            setUser(parsedUser);\n          }\n        }\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error);\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n      }\n    };\n    initializeAuth();\n  }, []);\n  const setAuthState = (token, user) => {\n    setToken(token);\n    setUser(user);\n    setIsAuthenticated(true);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  };\n  const register = async (email, password, name) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signup\", {\n        email,\n        password,\n        name\n      });\n      if (response.data.token && response.data.user) {\n        setAuthState(response.data.token, response.data.user);\n        return {\n          success: true\n        };\n      }\n      throw new Error(\"Invalid response from server\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Registration failed\"\n      };\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signin\", {\n        email,\n        password\n      });\n      if (response.data.token && response.data.user) {\n        setAuthState(response.data.token, response.data.user);\n        return {\n          success: true\n        };\n      }\n      throw new Error(\"Invalid response from server\");\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\"\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      isAuthenticated,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"7QAgGZ4bKvyjRtODWVW6b6eD7IM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","user","setUser","isAuthenticated","setIsAuthenticated","initializeAuth","storedToken","localStorage","getItem","storedUser","parsedUser","JSON","parse","error","console","removeItem","setAuthState","setItem","stringify","register","email","password","name","response","post","data","success","Error","_error$response","_error$response$data","message","login","_error$response2","_error$response2$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shehzad/Downloads/Metronic-System-main/Metronic-System-main/src/Context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const storedToken = localStorage.getItem(\"token\");\n        const storedUser = localStorage.getItem(\"user\");\n\n        if (storedToken) {\n          setToken(storedToken);\n          setIsAuthenticated(true);\n        }\n        if (storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          if (parsedUser && typeof parsedUser === \"object\") {\n            setUser(parsedUser);\n          }\n        }\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error);\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const setAuthState = (token, user) => {\n    setToken(token);\n    setUser(user);\n    setIsAuthenticated(true);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  };\n\n  const register = async (email, password, name) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signup\", {\n        email,\n        password,\n        name,\n      });\n\n      if (response.data.token && response.data.user) {\n        setAuthState(response.data.token, response.data.user);\n        return { success: true };\n      }\n      throw new Error(\"Invalid response from server\");\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.message || \"Registration failed\",\n      };\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signin\", {\n        email,\n        password,\n      });\n\n      if (response.data.token && response.data.user) {\n        setAuthState(response.data.token, response.data.user);\n        return { success: true };\n      }\n      throw new Error(\"Invalid response from server\");\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.message || \"Login failed\",\n      };\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        user,\n        isAuthenticated,\n        register,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}