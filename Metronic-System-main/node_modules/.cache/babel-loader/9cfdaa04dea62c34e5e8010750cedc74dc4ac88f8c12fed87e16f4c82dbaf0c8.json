{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shehzad\\\\Downloads\\\\Metronic-System-main\\\\Metronic-System-main\\\\src\\\\Context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { auth, googleProvider } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")) || null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const handleError = error => {\n    if (error.response) {\n      // Backend responded with an error\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 400:\n          throw new Error(data.message || \"Invalid input. Please check your details.\");\n        case 401:\n          throw new Error(data.message || \"Unauthorized. Please check your credentials.\");\n        case 409:\n          throw new Error(data.message || \"Email already in use.\");\n        case 500:\n          throw new Error(\"Server error. Please try again later.\");\n        default:\n          throw new Error(\"An unexpected error occurred.\");\n      }\n    } else if (error.code) {\n      // Firebase-specific errors\n      switch (error.code) {\n        case \"auth/email-already-in-use\":\n          throw new Error(\"This email is already registered. Try signing in.\");\n        case \"auth/invalid-email\":\n          throw new Error(\"Invalid email format.\");\n        case \"auth/weak-password\":\n          throw new Error(\"Password is too weak. It must be at least 8 characters.\");\n        case \"auth/popup-closed-by-user\":\n          throw new Error(\"Google sign-in was cancelled.\");\n        case \"auth/network-request-failed\":\n          throw new Error(\"Network error. Please check your connection and try again.\");\n        default:\n          throw new Error(\"Google authentication failed.\");\n      }\n    } else {\n      // Network or other errors\n      throw new Error(\"Unable to connect to the server. Please check your internet connection.\");\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signup\", {\n        name,\n        email,\n        password\n      });\n      setToken(response.data.token);\n      setUser(response.data.user);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      handleError(error);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signin\", {\n        email,\n        password\n      });\n      setToken(response.data.token);\n      setUser(response.data.user);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      handleError(error);\n    }\n  };\n  const googleAuth = async (email, name) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/google-auth\", {\n        email,\n        name\n      });\n      setToken(response.data.token);\n      setUser(response.data.user);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      handleError(error);\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      register,\n      login,\n      googleAuth,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"83xxt1Myrv54Tid+xdjV6CZRWwA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","auth","googleProvider","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","JSON","parse","storedUser","handleError","error","response","status","data","Error","message","code","register","name","email","password","post","setItem","stringify","login","googleAuth","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shehzad/Downloads/Metronic-System-main/Metronic-System-main/src/Context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { auth, googleProvider } from \"../../firebase\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [user, setUser] = useState(\n    JSON.parse(localStorage.getItem(\"user\")) || null\n  );\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const handleError = (error) => {\n    if (error.response) {\n      // Backend responded with an error\n      const { status, data } = error.response;\n      switch (status) {\n        case 400:\n          throw new Error(\n            data.message || \"Invalid input. Please check your details.\"\n          );\n        case 401:\n          throw new Error(\n            data.message || \"Unauthorized. Please check your credentials.\"\n          );\n        case 409:\n          throw new Error(data.message || \"Email already in use.\");\n        case 500:\n          throw new Error(\"Server error. Please try again later.\");\n        default:\n          throw new Error(\"An unexpected error occurred.\");\n      }\n    } else if (error.code) {\n      // Firebase-specific errors\n      switch (error.code) {\n        case \"auth/email-already-in-use\":\n          throw new Error(\"This email is already registered. Try signing in.\");\n        case \"auth/invalid-email\":\n          throw new Error(\"Invalid email format.\");\n        case \"auth/weak-password\":\n          throw new Error(\n            \"Password is too weak. It must be at least 8 characters.\"\n          );\n        case \"auth/popup-closed-by-user\":\n          throw new Error(\"Google sign-in was cancelled.\");\n        case \"auth/network-request-failed\":\n          throw new Error(\n            \"Network error. Please check your connection and try again.\"\n          );\n        default:\n          throw new Error(\"Google authentication failed.\");\n      }\n    } else {\n      // Network or other errors\n      throw new Error(\n        \"Unable to connect to the server. Please check your internet connection.\"\n      );\n    }\n  };\n\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signup\", {\n        name,\n        email,\n        password,\n      });\n      setToken(response.data.token);\n      setUser(response.data.user);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/signin\", {\n        email,\n        password,\n      });\n      setToken(response.data.token);\n      setUser(response.data.user);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const googleAuth = async (email, name) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/api/google-auth\",\n        {\n          email,\n          name,\n        }\n      );\n      setToken(response.data.token);\n      setUser(response.data.user);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        user,\n        register,\n        login,\n        googleAuth,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}