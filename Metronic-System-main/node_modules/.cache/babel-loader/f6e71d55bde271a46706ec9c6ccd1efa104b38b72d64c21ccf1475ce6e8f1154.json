{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shehzad\\\\Downloads\\\\Metronic-System-main\\\\Metronic-System-main\\\\src\\\\Components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import Header from \"./Header\";\n// import Sidebar from \"./SideBar\";\n// import Chat from \"./Chat\";\n\n// const Navbar = () => {\n//   const [darkMode, setDarkMode] = useState(false);\n//   const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n//   const [showMore, setShowMore] = useState(false);\n//   const [newChatTrigger, setNewChatTrigger] = useState(0);\n\n//   // Handler for new chat button\n//   const handleNewChat = () => {\n//     // Increment the trigger to cause Chat component to reset\n//     setNewChatTrigger((prev) => prev + 1);\n//   };\n\n//   return (\n//     <div\n//       className={`flex flex-col h-screen ${\n//         darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\"\n//       }`}\n//     >\n//       <Header\n//         darkMode={darkMode}\n//         setDarkMode={setDarkMode}\n//         sidebarCollapsed={sidebarCollapsed}\n//         setSidebarCollapsed={setSidebarCollapsed}\n//       />\n//       <div className=\"flex flex-1 overflow-hidden\">\n//         <Sidebar\n//           darkMode={darkMode}\n//           sidebarCollapsed={sidebarCollapsed}\n//           setSidebarCollapsed={setSidebarCollapsed}\n//           showMore={showMore}\n//           setShowMore={setShowMore}\n//           onNewChat={handleNewChat}\n//         />\n//         <Chat darkMode={darkMode} newChatTrigger={newChatTrigger} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Navbar;\n\nimport React, { useState } from \"react\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./SideBar\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n  const [newChatTrigger, setNewChatTrigger] = useState(0);\n  const [conversationId, setConversationId] = useState(null);\n  const handleNewChat = () => {\n    setNewChatTrigger(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex h-screen ${darkMode ? \"dark\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode,\n      sidebarCollapsed: sidebarCollapsed,\n      setSidebarCollapsed: setSidebarCollapsed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      darkMode: darkMode,\n      sidebarCollapsed: sidebarCollapsed,\n      setSidebarCollapsed: setSidebarCollapsed,\n      showMore: showMore,\n      setShowMore: setShowMore,\n      onNewChat: handleNewChat,\n      setConversationId: setConversationId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      darkMode: darkMode,\n      newChatTrigger: newChatTrigger,\n      conversationId: conversationId,\n      setConversationId: setConversationId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"Le1dNuQOQSkz8aBHyLj7/7mgBg0=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Chat","Sidebar","Header","jsxDEV","_jsxDEV","Navbar","_s","darkMode","setDarkMode","sidebarCollapsed","setSidebarCollapsed","showMore","setShowMore","newChatTrigger","setNewChatTrigger","conversationId","setConversationId","handleNewChat","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNewChat","_c","$RefreshReg$"],"sources":["C:/Users/Shehzad/Downloads/Metronic-System-main/Metronic-System-main/src/Components/Navbar.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import Header from \"./Header\";\n// import Sidebar from \"./SideBar\";\n// import Chat from \"./Chat\";\n\n// const Navbar = () => {\n//   const [darkMode, setDarkMode] = useState(false);\n//   const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n//   const [showMore, setShowMore] = useState(false);\n//   const [newChatTrigger, setNewChatTrigger] = useState(0);\n\n//   // Handler for new chat button\n//   const handleNewChat = () => {\n//     // Increment the trigger to cause Chat component to reset\n//     setNewChatTrigger((prev) => prev + 1);\n//   };\n\n//   return (\n//     <div\n//       className={`flex flex-col h-screen ${\n//         darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\"\n//       }`}\n//     >\n//       <Header\n//         darkMode={darkMode}\n//         setDarkMode={setDarkMode}\n//         sidebarCollapsed={sidebarCollapsed}\n//         setSidebarCollapsed={setSidebarCollapsed}\n//       />\n//       <div className=\"flex flex-1 overflow-hidden\">\n//         <Sidebar\n//           darkMode={darkMode}\n//           sidebarCollapsed={sidebarCollapsed}\n//           setSidebarCollapsed={setSidebarCollapsed}\n//           showMore={showMore}\n//           setShowMore={setShowMore}\n//           onNewChat={handleNewChat}\n//         />\n//         <Chat darkMode={darkMode} newChatTrigger={newChatTrigger} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Navbar;\n\nimport React, { useState } from \"react\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./SideBar\";\nimport Header from \"./Header\";\n\nconst Navbar = () => {\n  const [darkMode, setDarkMode] = useState(false);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n  const [newChatTrigger, setNewChatTrigger] = useState(0);\n  const [conversationId, setConversationId] = useState(null);\n\n  const handleNewChat = () => {\n    setNewChatTrigger((prev) => prev + 1);\n  };\n\n  return (\n    <div className={`flex h-screen ${darkMode ? \"dark\" : \"\"}`}>\n      <Header\n        darkMode={darkMode}\n        setDarkMode={setDarkMode}\n        sidebarCollapsed={sidebarCollapsed}\n        setSidebarCollapsed={setSidebarCollapsed}\n      />\n      <Sidebar\n        darkMode={darkMode}\n        sidebarCollapsed={sidebarCollapsed}\n        setSidebarCollapsed={setSidebarCollapsed}\n        showMore={showMore}\n        setShowMore={setShowMore}\n        onNewChat={handleNewChat}\n        setConversationId={setConversationId}\n      />\n      <Chat\n        darkMode={darkMode}\n        newChatTrigger={newChatTrigger}\n        conversationId={conversationId}\n        setConversationId={setConversationId}\n      />\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IAC1BH,iBAAiB,CAAEI,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAE,iBAAiBZ,QAAQ,GAAG,MAAM,GAAG,EAAE,EAAG;IAAAa,QAAA,gBACxDhB,OAAA,CAACF,MAAM;MACLK,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBC,gBAAgB,EAAEA,gBAAiB;MACnCC,mBAAmB,EAAEA;IAAoB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFpB,OAAA,CAACH,OAAO;MACNM,QAAQ,EAAEA,QAAS;MACnBE,gBAAgB,EAAEA,gBAAiB;MACnCC,mBAAmB,EAAEA,mBAAoB;MACzCC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBa,SAAS,EAAER,aAAc;MACzBD,iBAAiB,EAAEA;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFpB,OAAA,CAACJ,IAAI;MACHO,QAAQ,EAAEA,QAAS;MACnBM,cAAc,EAAEA,cAAe;MAC/BE,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCID,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}