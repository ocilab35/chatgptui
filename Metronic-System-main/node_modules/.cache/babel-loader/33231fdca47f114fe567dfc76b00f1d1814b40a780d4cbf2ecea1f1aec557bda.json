{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shehzad\\\\Downloads\\\\Metronic-System-main\\\\Metronic-System-main\\\\src\\\\Pages\\\\Authentication\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const validateInputs = () => {\n    if (password.length < 8) {\n      alert(\"Password must be at least 8 characters long.\");\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\"); // Reset error message\n    if (!validateInputs()) return;\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Registration successful! You can now log in.\");\n        navigate(\"/\");\n      } else {\n        setError(data.message || \"Registration failed\");\n      }\n    } catch (err) {\n      setError(err.message || \"Registration failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-center bg-no-repeat page-bg p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"moPc0VQx9h/MXHSn6Fy68jmAqS0=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","password","setPassword","error","setError","navigate","validateInputs","length","alert","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","err","className","children","onSubmit","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shehzad/Downloads/Metronic-System-main/Metronic-System-main/src/Pages/Authentication/Signup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Signup() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const validateInputs = () => {\n    if (password.length < 8) {\n      alert(\"Password must be at least 8 characters long.\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\"); // Reset error message\n    if (!validateInputs()) return;\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Registration successful! You can now log in.\");\n        navigate(\"/\");\n      } else {\n        setError(data.message || \"Registration failed\");\n      }\n    } catch (err) {\n      setError(err.message || \"Registration failed\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-center bg-no-repeat page-bg p-4\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n\n        {error && <p className=\"text-red-500\">{error}</p>}\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIL,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;MACvBC,KAAK,CAAC,8CAA8C,CAAC;MACrD,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,IAAI,CAACE,cAAc,CAAC,CAAC,EAAE;IACvB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBnB,KAAK;UACLE;QACF,CAAC;MACH,CAAC,CAAC;MACF,MAAMkB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfb,KAAK,CAAC,8CAA8C,CAAC;QACrDH,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLD,QAAQ,CAACe,IAAI,CAACG,OAAO,IAAI,qBAAqB,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZnB,QAAQ,CAACmB,GAAG,CAACD,OAAO,IAAI,qBAAqB,CAAC;IAChD;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK4B,SAAS,EAAC,kFAAkF;IAAAC,QAAA,eAC/F7B,OAAA;MAAM8B,QAAQ,EAAEjB,YAAa;MAAAgB,QAAA,gBAC3B7B,OAAA;QACE+B,IAAI,EAAC,OAAO;QACZC,KAAK,EAAE7B,KAAM;QACb8B,QAAQ,EAAGnB,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvC,OAAA;QACE+B,IAAI,EAAC,UAAU;QACfC,KAAK,EAAE3B,QAAS;QAChB4B,QAAQ,EAAGnB,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EAEDhC,KAAK,iBAAIP,OAAA;QAAG4B,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEtB;MAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDvC,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACrC,EAAA,CA9DQD,MAAM;EAAA,QAIIH,WAAW;AAAA;AAAA0C,EAAA,GAJrBvC,MAAM;AAgEf,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}