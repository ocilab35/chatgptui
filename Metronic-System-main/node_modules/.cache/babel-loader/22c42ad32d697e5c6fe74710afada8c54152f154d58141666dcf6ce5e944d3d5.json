{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shehzad\\\\Downloads\\\\Metronic-System-main\\\\Metronic-System-main\\\\src\\\\Components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Sidebar from \"./SideBar\";\nimport Chat from \"./Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n  const [chats, setChats] = useState([]);\n  const [activeChatId, setActiveChatId] = useState(null);\n  const [newChatTrigger, setNewChatTrigger] = useState(0);\n\n  // Fetch all chats on mount\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) throw new Error(\"No token found\");\n        const response = await fetch(\"http://localhost:5000/api/chats/\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error(\"Failed to fetch chats\");\n        const data = await response.json();\n        setChats(data);\n      } catch (error) {\n        console.error(\"Error fetching chats:\", error);\n      }\n    };\n    fetchChats();\n  }, []);\n\n  // Handler for new chat\n  const handleNewChat = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"No token found\");\n      const response = await fetch(\"http://localhost:5000/api/chats/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: \"New Chat\"\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to create chat\");\n      const newChat = await response.json();\n      setChats(prev => [newChat, ...prev]);\n      setActiveChatId(newChat._id);\n      setNewChatTrigger(prev => prev + 1);\n    } catch (error) {\n      console.error(\"Error creating chat:\", error);\n    }\n  };\n\n  // Handler for selecting a chat\n  const handleSelectChat = chatId => {\n    setActiveChatId(chatId);\n    setNewChatTrigger(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col h-screen ${darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode,\n      sidebarCollapsed: sidebarCollapsed,\n      setSidebarCollapsed: setSidebarCollapsed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        darkMode: darkMode,\n        sidebarCollapsed: sidebarCollapsed,\n        setSidebarCollapsed: setSidebarCollapsed,\n        showMore: showMore,\n        setShowMore: setShowMore,\n        onNewChat: handleNewChat,\n        chats: chats,\n        onSelectChat: handleSelectChat,\n        activeChatId: activeChatId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        darkMode: darkMode,\n        newChatTrigger: newChatTrigger,\n        activeChatId: activeChatId,\n        setChats: setChats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"BrdpZj3lpkZO+96hD3n5KfvXmUY=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Header","Sidebar","Chat","jsxDEV","_jsxDEV","Navbar","_s","darkMode","setDarkMode","sidebarCollapsed","setSidebarCollapsed","showMore","setShowMore","chats","setChats","activeChatId","setActiveChatId","newChatTrigger","setNewChatTrigger","fetchChats","token","localStorage","getItem","Error","response","fetch","headers","Authorization","ok","data","json","error","console","handleNewChat","method","body","JSON","stringify","title","newChat","prev","_id","handleSelectChat","chatId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNewChat","onSelectChat","_c","$RefreshReg$"],"sources":["C:/Users/Shehzad/Downloads/Metronic-System-main/Metronic-System-main/src/Components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Sidebar from \"./SideBar\";\nimport Chat from \"./Chat\";\n\nconst Navbar = () => {\n  const [darkMode, setDarkMode] = useState(false);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n  const [chats, setChats] = useState([]);\n  const [activeChatId, setActiveChatId] = useState(null);\n  const [newChatTrigger, setNewChatTrigger] = useState(0);\n\n  // Fetch all chats on mount\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) throw new Error(\"No token found\");\n\n        const response = await fetch(\"http://localhost:5000/api/chats/\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) throw new Error(\"Failed to fetch chats\");\n        const data = await response.json();\n        setChats(data);\n      } catch (error) {\n        console.error(\"Error fetching chats:\", error);\n      }\n    };\n\n    fetchChats();\n  }, []);\n\n  // Handler for new chat\n  const handleNewChat = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"No token found\");\n\n      const response = await fetch(\"http://localhost:5000/api/chats/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title: \"New Chat\" }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to create chat\");\n      const newChat = await response.json();\n      setChats((prev) => [newChat, ...prev]);\n      setActiveChatId(newChat._id);\n      setNewChatTrigger((prev) => prev + 1);\n    } catch (error) {\n      console.error(\"Error creating chat:\", error);\n    }\n  };\n\n  // Handler for selecting a chat\n  const handleSelectChat = (chatId) => {\n    setActiveChatId(chatId);\n    setNewChatTrigger((prev) => prev + 1);\n  };\n\n  return (\n    <div\n      className={`flex flex-col h-screen ${\n        darkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\"\n      }`}\n    >\n      <Header\n        darkMode={darkMode}\n        setDarkMode={setDarkMode}\n        sidebarCollapsed={sidebarCollapsed}\n        setSidebarCollapsed={setSidebarCollapsed}\n      />\n      <div className=\"flex flex-1 overflow-hidden\">\n        <Sidebar\n          darkMode={darkMode}\n          sidebarCollapsed={sidebarCollapsed}\n          setSidebarCollapsed={setSidebarCollapsed}\n          showMore={showMore}\n          setShowMore={setShowMore}\n          onNewChat={handleNewChat}\n          chats={chats}\n          onSelectChat={handleSelectChat}\n          activeChatId={activeChatId}\n        />\n        <Chat\n          darkMode={darkMode}\n          newChatTrigger={newChatTrigger}\n          activeChatId={activeChatId}\n          setChats={setChats}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}